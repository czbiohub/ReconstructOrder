dataset:
  data_dir: '/gpfs/CompMicro/Spinningdisk/RawData/virtualstaining/2019_02_15_kidney_slice'
  # (str) The path of the folder that holds raw data

  samples: ['SMS_2018_1227_1433_1']
  # (str or list) Acquisition folder(s) within the experiment folder to process

  positions: ['2-Pos_002_026']
  # (str or list) Positions within all of sample folders that are to be analyzed.
  ##   'all'
  ##   ['Pos1', 'Pos2', 'Pos3']
  ##   [['all'], ['Pos1', 'Pos2']], in which case all positions from Sample1 and Pos1 and Pos2 from Sample2 will be analyzed

  # The full path to the data is  data_dir/sample[n]/positions[m].

  z_slices: 'all'
  # (str, list, or range) Z slices to be analyzed.
  # The same set of z-slices will be analyzed for all positions and timepoints within a given sample
  # If the data do not contain z slices, leave out this parameter or set to 'all'
  ##   'all'
  ##   [0, 10, 20]
  ##   !!python/object/apply:builtins.range [10, 50, 5], in which case z slices in range(10,50,5) will be analyzed
  ##   [['all'], [0, 10, 20]], in which case all z slices from Sample1 and slices 0, 10, and 20 from Sample2 will be analyzed

  timepoints: 'all'
  # (str, list, or range) Timepoints to be analyzed.
  # The same set of timepoints will be analyzed for all positions and z-slices within a given sample
  # If the data do not contain z slices, leave out this parameter or set to 'all'
  ##   'all'
  ##   [0, 10, 20]
  ##   !!python/object/apply:builtins.range [10, 50, 5], in which case timepoints in range(10,50,5) will be analyzed
  ##   [['all'], [0, 10, 20]], in which case all timepoints from Sample1 and timepoints 0, 10, and 20 from Sample2 will be analyzed

  background: 'BG_2019_0215_1337_1'
  #(str or list) Background folder(s) within the experiment folder
  ##   a string, e.g. 'Background1', in which case all samples will be analyzed with the same background data;
  ##   a list, e.g. ['Background1', 'Background2'], of one background dataset per sample


  processed_dir: '/gpfs/CompMicro/Projects/reconOrderTestData'
  # (str) The path of the parent folder where the output will be saved
  
  ROI: [0, 0, 2048, 2048]
  # (list) List of integers to specify the region of interest for processing
  ##   List format, e.g. [Ny_start, Nx_start, number_of_pixel_in_y, number_of_pixel_in_x]

processing:
  output_channels: ['Brightfield_computed', 'Retardance', 'Orientation', 'Polarization', 'Phase3D']

  # (list) Any combination of the following values.
  ##    'Brightfield', 'Brightfield_computed', 'Retardance', 'Orientation', 'Polarization',
  ##    'RetardanceZavg', 'OrientationZavg',
  ##    'Orientation_x', 'Orientation_y', 'Phase2D', 'Absorption2D', 'Phase3D',
  ##    'Pol_State_0', 'Pol_State_1', 'Pol_State_2', 'Pol_State_3', 'Pol_State_4',
  ##    'Stokes_0', 'Stokes_1', 'Stokes_2', 'Stokes_3',
  ##    '405', '488', '568', '640', 'ex561em700'
  ##    'Retardance+Orientation', 'Polarization+Orientation',
  ##    'Brightfield+Retardance+Orientation',
  ##    'Retardance+Fluorescence', 'Retardance+Fluorescence_all'

  circularity: 'rcp'
  # ('lcp' or 'rcp') the circularity of the analyzer looking from the detector's point of view.
  #    Changing this flag will flip the slow axis horizontally.

  background_correction: 'Local_fit'
  # (str) Background correction method, one of the following
  ##   'None': no background correction will be performed
  ##   'Input': user-provided background will be removed from sample data
  ##   'Local_filter': sample is first corrected with background provided in dataset section. The residual background is further estimated with a low-pass filter and removed.
  ##   'Local_fit': sample is first corrected with background provided in dataset section. The residual background is further estimated by a polynomial fit and removed. More robust than filtering approach.
  ##   'Local_defocus' (deprecated): sample is corrected with out-of-focus image of the sample from 'BgDir_local' folder. The background images must have exactly same position indices as sample images.
  ##   'Auto': background for each sample is chosen from the metadata generated by Micro-Manager.

  local_fit_order: 2
  # (int) order of the polynomial used for 'Local_fit' background correction

  flatfield_correction: False
  # (bool) perform flat-field correction on fluorescence images if True

  azimuth_offset: 0
  # (float) offset of the orientation reference axis

  separate_positions: True
  # (bool) Flag to output processed images from separate positions in separate folders.

  n_slice_local_bg: 'all'
  # (str or int) Number of slices averaged for local background estimation

  binning: 1
  # (int) Number of pixels to sum in X and Y in raw images to increase S/N.
  
  use_gpu: False
  # (bool) Option to use GPU processing if True (require cupy to be installed)
  
  gpu_id: 0
  # (int) ID of GPU to be used
  
  ########################################
  #    PHASE RECONSTRUCTION PARAMETERS   #
  ########################################
  
  pixel_size: 6.5
  # (float) Camera pixel size in the unit of um
  
  magnification: 63
  # (float) Magnification of the objective
  
  NA_objective: 1.47
  # (float) Numerical aperture of the objective
  
  NA_condenser: 0.9
  # (float) Numerical aperture of the condenser
  
  n_objective_media: 1.512
  # (float) Refractive index of the objective immersion oil
  
  focus_zidx: 22
  # (int) Index of the focused z slice of the dataset for 2D phase reconstruction
  
  pad_z: 5
  # (int) Number of z slices padded above and below the dataset for 3D phase reconstruction to avoid boundary artifacts  
  
  ## Denoiser parameters ##
  
  # ------- 2D ------- #
  
  phase_denoiser_2D: 'Tikhonov'
  # (str) Options of denoiser for 2D phase reconstruction
  ##   'Tikhonov' or 'TV' (total variation)
  
  #### 2D Tikhonov parameter ####
  # if noise is higher raise the regularization parameter an order of magnitude to see if the recon is better
  
  Tik_reg_abs_2D: 1.0e-2
  # (float) Tikhonov regularization parameter for 2D absorption 
  ##   1.0e-3 should work generally when noise is low
  
  Tik_reg_ph_2D: 1.0e-2
  # (float) Tikhonov regularization parameter for 2D phase 
  ##   1.0e-3 should work generally when noise is low
  
  #### 2D TV parameter ####
  # ADMM formulation: 0.5 * || A*x - b ||_2^2 + lambda * || z ||_1 + 0.5 * rho * || D*x - z + u ||_2^2
  # For more noisy data, raise TV_reg to enforce stronger denoising effect
  
  rho_2D: 1
  # (float) rho parameters in the 2D ADMM formulation
  ##   1 is generally good, no need to tune
  
  itr_2D: 50
  # (int) Number of iterations for 2D TV denoiser
  ##   50 is generally good, no need to tune
  
  TV_reg_abs_2D: 1.0e-3
  # (float) TV regularization parameter for 2D absorption
  ##   1e-4 is generally good
  
  TV_reg_ph_2D: 1.0e-5
  # (float) TV regularization parameter for 2D phase
  ##   1e-4 is generally good
  
  # ------- 3D ------- #
  
  phase_denoiser_3D: 'Tikhonov'
  # (str) Options of denoiser for 3D phase reconstruction
  ##   'Tikhonov' or 'TV' (total variation)

  #### 3D Tikhonov parameters ####
  # if noise is higher raise an order of magnitude to see if the recon is better
  
  Tik_reg_ph_3D: 1.0e-4
  # (float) Tikhonov regularization parameter for 3D phase 
  ##   1.0e-3 to 1.0e-4 should work generally when noise is low
  
  #### 3D TV parameters ####
  # For more noisy data, raise TV_reg to enforce stronger denoising effect
  
  rho_3D: 1.0e-3
  # (float) rho parameters in the 2D ADMM formulation
  ##   1.0e-3 is generally good, no need to tune
  
  itr_3D: 50
  # (int) Number of iterations for 3D TV denoiser
  ##   50 is generally good, no need to tune
  
  TV_reg_ph_3D: 5.0e-5
  # (float) TV regularization parameter for 3D phase
  ##   5.0e-5 is generally good
  
  
  
  

plotting:
  normalize_color_images: True
  # (bool) Scale fluorescence channels in each 'Retardance+Fluorescence' differently for optimal contrast. Set False to apply same scale for all images.

  transmission_scaling: 1E4
  # (float) scaling factor of transmission channel

  retardance_scaling: 1E3
  # (float) scaling factor of retardance channel
  
  phase_2D_scaling: 1  
  # (float) scaling factor of 2D phase images
  ##   when scaling is 1, phase is plotted from -5 to 5 radian
  
  absorption_2D_scaling: 1  
  # (float) scaling factor of 2D absorption images
  ##   when scaling is 1, absorption is plotted from -1 to 1
  
  phase_3D_scaling: 1  
  # (float) scaling factor of 3D phase images
  ##   when scaling is 1, phase is plotted from -5 to 5 radian

  save_birefringence_fig: False
  # (bool) save figures showing different channels

  save_stokes_fig: False
  # (bool)

  save_polarization_fig: False
  # (bool)

  save_micromanager_fig: False
  # (bool)
  

# Default values of keys when not specified #
#===========================================#

##  dataset parameters
#   positions: 'all'
#   z_slices: 'all'
#   timepoints: 'all'
#   ROI: [0, 0, size_of_image_in_y, size_of_image_in_x]

##  processing parameters
#   output_channels: ['Brightfield', 'Retardance', 'Orientation', 'Polarization']
#   circularity: 'rcp'
#   background_correction: 'None'
#   flatfield_correction: False
#   azimuth_offset: 0
#   separate_positions: True
#   use_gpu: False
#   gpu_id: 0
#   phase_denoiser_2D: 'Tikhonov'
#   Tik_reg_abs_2D: 1.0e-6
#   Tik_reg_ph_2D: 1.0e-6
#   rho_2D: 1
#   itr_2D: 50
#   TV_reg_abs_2D: 1.0e-3
#   TV_reg_ph_2D : 1.0e-5
#   phase_denoiser_3D = 'Tikhonov'
#   rho_3D: 1e-3
#   itr_3D: 50
#   Tik_reg_ph_3D: 1.0e-4
#   TV_reg_ph_3D: 5.0e-5
#   pad_z = 0

##  plotting parameters 
#   normalize_color_images: True
#   save_birefringence_fig: False
#   save_stokes_fig: False
#   transmission_scaling: 1E4
#   retardance_scaling: 1E3
#   phase_2D_scaling: 1  
#   phase_3D_scaling: 1
